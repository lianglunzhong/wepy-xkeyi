<style lang="less">
  @import 'style/weui.less';

  page{
    background-color: #F8F8F8;
    font-size: 16px;
  }
  .page__hd {
    padding: 40px;
  }
  .page__bd {
    padding-bottom: 40px;
  }
  .page__bd_spacing {
    padding-left: 15px;
    padding-right: 15px;
  }
  .page__ft{
    padding-bottom: 10px;
    text-align: center;
  }
  .page__title {
    text-align: left;
    font-size: 20px;
    font-weight: 400;
  }
  .page__desc {
    margin-top: 5px;
    color: #888888;
    text-align: left;
    font-size: 14px;
  }
</style>

<script>
import wepy from 'wepy'
import 'wepy-async-function'
import api from '@/utils/api'

export default class extends wepy.app {
  config = {
    pages: [
      'pages/index',
      'pages/articles/index',
      'pages/articles/show',
      'pages/me/index',
      'pages/users/index',
      'pages/users/authorized',
      'pages/replies/create'
    ],
    window: {
      backgroundTextStyle: 'light',
      navigationBarBackgroundColor: '#fff',
      navigationBarTitleText: 'WeChat',
      navigationBarTextStyle: 'black'
    },
    tabBar: {
      list: [{
        pagePath: 'pages/articles/index',
        text: 'Home',
        iconPath: 'images/index.png',
        selectedIconPath: 'images/index_selected.png'
      }, {
        pagePath: 'pages/users/index',
        text: 'Me',
        iconPath: 'images/me.png',
        selectedIconPath: 'images/me_selected.png'
      }],
      color: '#707070',
      backgroundColor: '#ffffff',
      selectedColor: '#00b5ad'
    }
  }

  globalData = {
    refresh: false
  }

  constructor () {
    super()
    this.use('requestfix')
    this.use('promisify')
  }

  // 项目启动
  onLaunch() {

  }

  // 定义在 app.wpy 中的方法是全局方法，在其他页面中可以通过 this.$parent.checkLogin()
  // 检查用户是否已经登录
  checkLogin() {
    return (wepy.getStorageSync('access_tokem') !== '')
  }

  // 获取当前登录用户信息
  async getCurrentUser() {
    let user = null

    // 如果用户未登录
    if (!this.checkLogin()) {
      await api.login()

      // 获取用户信息
      let userResponse = await api.authRequest('user', false)
      // 状态码为 200， 表示请求成功
      if (userResponse.statusCode === 200) {
        user = userResponse.data
        wepy.setStorageSync('user', user)
      }
    } else {
      // 从缓存中获取用户信息
      user = wepy.getStorageSync('user')
      // 登录了但是缓存中没有，请求接口获取
      if (!user) {
        let userResponse = await api.authRequest('user', false)

        // 状态码为 200， 表示请求成功
        if (userResponse.statusCode === 200) {
          user = userResponse.data
          wepy.setStorageSync('user', user)
        }
      }
    }

    return user
  }

  // 获取用户微信信息
  async getUserInfo() {
    // 未授权，直接返回 null
    if (!this.getSetting()) {
      return null
    }

    // 从缓存中获取
    let userInfo = wepy.getStorageSync('userInfo')
    if (!userInfo) {
      let res = await wepy.getUserInfo()

      userInfo.avatar = res.userInfo.avatarUrl
      userInfo.name = res.userInfo.nickName

      // 缓存用户信息
      wepy.setStorageSync('userInfo', userInfo)

      // 更新用户信息到数据库
      api.authRequest({
        url: 'user',
        method: 'PUT',
        data: userInfo
      }, false)
    }

    return userInfo
  }

  // 查看是否授权
  async getSetting() {
    let res = await wepy.getSetting()
    if (res.authSetting['scope.userInfo']) {
      return true
    }

    return false
  }
}
</script>
